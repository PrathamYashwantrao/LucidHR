@{
    ViewData["Title"] = "View Calendar";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

@* ------leave calendar *@

@model CalendarViewModel
@using Newtonsoft.Json;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        /* .calendar-container {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            width: 350px;
            margin-left: 300px;
            margin-top: 200px
        } */

        .calendar-header {
            background: #3b5998;
            color: white;
            text-align: center;
            padding: 10px;
            font-size: 1.25em;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .calendar-header select {
                background: #3b5998;
                color: white;
                border: none;
                padding: 5px;
                border-radius: 5px;
            }

        .calendar-body {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
            background: #ddd;
        }

            .calendar-body div {
                background: white;
                text-align: center;
                padding: 30px;
                font-size: 0.85em;
            }

                .calendar-body div.header {
                    background: #f0f0f0;
                    font-weight: bold;
                }

                .calendar-body div.weekend {
                    background-color: lightpink;
                    color: white;
                }

                .calendar-body div.leave-day {
                    background: #ff6347;
                    color: white;
                }

                .calendar-body div.approved-leave-day {
                    background-color: lightgreen;
                    color: white;
                }

                .calendar-body div.pending-leave-day {
                    background-color: lightblue;
                    color: white;
                }

                .calendar-body div.rejected-leave-day {
                    background-color: lavender;
                    color: white;
                }
    </style>
</head>
<body>

    <div id="main-content">

        <div class="block-header py-lg-4 py-3">
            <div class="row g-3">
                <div class="col-md-6 col-sm-12">
                    <h2 class="m-0 fs-5"><a href="javascript:void(0);" class="btn btn-sm btn-link ps-0 btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Leave Calendar</h2>
                    <i class="fa fa-square" style="color: pink;">Weekends</i>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    <i class="fa fa-square" style="color: green;">Approved Leaves</i>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    <i class="fa fa-square" style="color: blue;">Applied Leaves</i>
                    &nbsp;
                    &nbsp;
                    &nbsp;
                    <i class="fa fa-square" style="color: purple;">Rejected Leaves</i>
                    
                </div>
                <div class="col-md-6 col-sm-12 text-md-end">
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="row g-3">
                <div class="card p-3">


    <div class="calendar-container">
        <div class="calendar-header">
            <button onclick="changeMonth(-1)">&#9664;</button>
            <select id="yearSelect" onchange="fetchCalendar()"></select>
            <select id="monthSelect" onchange="fetchCalendar()"></select>
            <button onclick="changeMonth(1)">&#9654;</button>
        </div>
        <div class="calendar-body" id="calendarBody">
            <div class="header">Sun</div>
            <div class="header">Mon</div>
            <div class="header">Tue</div>
            <div class="header">Wed</div>
            <div class="header">Thu</div>
            <div class="header">Fri</div>
            <div class="header">Sat</div>
        </div>
    </div>


                </div>
            </div>
        </div>
    </div>


    <script>
        const currentYear = new Date().getFullYear();
        const currentMonth = new Date().getMonth();
        const leaveDates = @Html.Raw(JsonConvert.SerializeObject(Model.LeaveDates));

        document.addEventListener("DOMContentLoaded", function () {
            populateYearSelect();
            populateMonthSelect();
            fetchCalendar();
        });

        function populateYearSelect() {
            const yearSelect = document.getElementById('yearSelect');
            for (let year = 2020; year <= 2030; year++) {
                let option = document.createElement('option');
                option.value = year;
                option.text = year;
                if (year === currentYear) {
                    option.selected = true;
                }
                yearSelect.appendChild(option);
            }
        }

        function populateMonthSelect() {
            const monthSelect = document.getElementById('monthSelect');
            const monthNames = [
                'January', 'February', 'March', 'April', 'May', 'June',
                'July', 'August', 'September', 'October', 'November', 'December'
            ];
            monthNames.forEach((month, index) => {
                let option = document.createElement('option');
                option.value = index;
                option.text = month;
                if (index === currentMonth) {
                    option.selected = true;
                }
                monthSelect.appendChild(option);
            });
        }

        function changeMonth(offset) {
            const monthSelect = document.getElementById('monthSelect');
            const newMonth = parseInt(monthSelect.value) + offset;
            if (newMonth < 0) {
                monthSelect.value = 11;
                changeYear(-1);
            } else if (newMonth > 11) {
                monthSelect.value = 0;
                changeYear(1);
            } else {
                monthSelect.value = newMonth;
                fetchCalendar();
            }
        }

        function changeYear(offset) {
            const yearSelect = document.getElementById('yearSelect');
            const newYear = parseInt(yearSelect.value) + offset;
            yearSelect.value = newYear;
            fetchCalendar();
        }

        function fetchCalendar() {
            const year = document.getElementById('yearSelect').value;
            const month = document.getElementById('monthSelect').value;
            fetch(`/Calendar/Fetch?year=${year}&month=${parseInt(month) + 1}`)
                .then(response => response.json())
                .then(data => updateCalendar(data));
        }

        function updateCalendar(data) {
            const calendarBody = document.getElementById('calendarBody');
            calendarBody.innerHTML = `
                        <div class="header">Sun</div>
                        <div class="header">Mon</div>
                        <div class="header">Tue</div>
                        <div class="header">Wed</div>
                        <div class="header">Thu</div>
                        <div class="header">Fri</div>
                        <div class="header">Sat</div>
                    `;

            const firstDay = new Date(data.currentYear, data.currentMonth - 1, 1).getDay();
            const daysInMonth = new Date(data.currentYear, data.currentMonth, 0).getDate();

            for (let i = 0; i < firstDay; i++) {
                const emptyDayElement = document.createElement('div');
                emptyDayElement.innerText = '';
                calendarBody.appendChild(emptyDayElement);
            }

            data.days.forEach(day => {
                const dayElement = document.createElement('div');
                if (day.isWeekend) {
                    dayElement.classList.add('weekend');
                }
                if (day.isApprovedLeaveDay) {
                    dayElement.classList.add('approved-leave-day');
                }
                if (day.isPendingLeaveDay) {
                    dayElement.classList.add('pending-leave-day');
                }
                if (day.isRejectedLeaveDay) {
                    dayElement.classList.add('rejected-leave-day');
                }
                dayElement.innerText = day.day;
                calendarBody.appendChild(dayElement);
            });
        }
    </script>
</body>
</html>
